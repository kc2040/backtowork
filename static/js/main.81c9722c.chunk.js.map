{"version":3,"sources":["components/Welcome.js","context/consts.js","nav/Footer.jsx","Home.jsx","context/constants.js","nav/NavBar.jsx","context/cartContext.js","store/cartReducer.js","components/Summary.js","formValidation/userForm.js","formValidation/validate.js","components/Item.js","forms/RTWForm.jsx","components/Thankyou.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","history","Message","style","position","top","width","background","boxShadow","borderWidth","Header","Button","margin","left","onClick","push","size","primary","Icon","name","PUBLIC_FOLDER","Footer","Menu","color","fluid","widths","fixed","borderless","Item","Moment","Date","format","HomePage","imgURL","useHistory","Image","backgroundSize","responsive","src","disabled","basic","alt","Container","styles","lightGreyFont","greyFont","backgroudless","border","buttonText","fontSize","buttonTextSelected","figcaption","height","segment","redText","NavBar","inverted","as","NavLink","exact","to","className","window","location","pathname","changeTitle","CartContext","React","createContext","personalInfo","fname","lname","email","cell","date","products","id","img","selected","currentCart","prodError","cartReducer","state","action","type","selectedChanged","map","t","payload","Summary","useContext","dispatch","Segment","clearing","info","Divider","Grid","Row","Column","Link","floated","filter","length","product","key","ASSETS_FOLDER","circular","handleToggle","icon","useForm","callback","validate","useReducer","values","useState","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","handleChange","event","persist","infoChanged","target","value","handleSubmit","preventDefault","handleClear","test","backgroundColor","display","borderStyle","borderColor","opacity","RTWForm","count","Form","onSubmit","noValidate","relaxed","stackable","Group","Input","placeholder","onChange","required","autoComplete","label","boderless","align","columns","minWidth","maxWidth","Thankyou","App","initialState","cartContext","Provider","path","component","render","Boolean","hostname","match","rootElement","document","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81c9722c.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Icon, Message } from 'semantic-ui-react'\n\n\nexport default function Welcome({history})\n{\n    const msgstyle = {\n    position: 'absolute',\n    top: '20%',\n    width: '60%',\n    background: 'transparent',\n    boxShadow: 'none',\n      borderWidth: '0',\n      \n    };\n  const center = {\n  margin: '0',\n  position: 'absolute',\n  top: '60%',\n  left: '50%',\n}\n\n  return (\n      <>\n      <Message style={msgstyle}>\n          <Message.Header>Welcome message .....</Message.Header>\n          <p>\n            We updated our privacy policy here to better service our customers.\n            \n          </p>\n          \n        \n      </Message>\n      <Button style={center}\n            onClick={() => history.push('/rtwform')}\n            size='large'\n            primary\n            \n          >\n            return to work\n            <Icon name='right arrow' />\n        </Button>\n      </>\n        \n      \n    )\n\n}","export const ASSETS_FOLDER = 'https://raw.githubusercontent.com/kc2040/backtowork/main/public/assets/';\n//export const ASSETS_FOLDER = 'assets/';\n\nexport const PUBLIC_FOLDER = 'https://raw.githubusercontent.com/kc2040/backtowork/main/public/';\n//export const PUBLIC_FOLDER = '';","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport Moment from 'moment';\n\nexport default function Footer() {\n  return (\n    <Menu\n      color='#dcdcdc'\n      fluid\n      widths={4}\n      fixed='bottom'\n      position='absolute'\n      borderless\n      style={{ boxShadow: 'none', borderWidth: '0' }}\n    >\n      <Menu.Item>{Moment(Date()).format('YYYY')} © Randstad</Menu.Item>\n      <Menu.Item>Terms</Menu.Item>\n      <Menu.Item>Privacy</Menu.Item>\n      <Menu.Item>Contact</Menu.Item>\n    </Menu>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Container,\n  Icon,\n  Image,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport Welcome from './components/Welcome';\nimport { PUBLIC_FOLDER } from './context/consts';\nimport Footer from './nav/Footer';\n\nexport default function HomePage() {\n  const background = { backgroundSize: 'cover' };\n  const imgURL = PUBLIC_FOLDER;\n  const history = useHistory();\n\n  return (\n    <div style={{ background: '#fff' }}>\n      <Image\n        style={background}\n        responsive='true'\n        src={imgURL + 'businessoffice.png'}\n      ></Image>\n\n      <Button size='small' disabled basic>\n        <Image\n          size='small'\n          src={imgURL + 'rt-logo-dark.png'}\n          alt='rt-logo-dark'\n          style={{\n            position: 'absolute',\n            top: '1%',\n            left: '1%',\n          }}\n        />\n      </Button>\n\n      <Container>\n        <Welcome history={history}></Welcome>\n      </Container>\n      <Footer></Footer>\n    </div>\n  );\n}\n","const styles = {\n    lightGreyFont: { color: '#C0C0C0' },\n    greyFont: { color: '#808080' },\n    borderless: { boxShadow: 'none', borderWidth: '0' },\n    backgroudless: { border: 'none', background: 'none', },\n        \n    buttonText: {\n    color: '#A7A7A7',\n    fontSize: '1em',\n  },\n  buttonTextSelected: {\n    fontSize: '0.9em',\n    color: '#A7A7A7',\n   \n  },\n\n  figcaption: {\n    position: 'absolute',\n    top: 45,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    fontSize: '1.1em',\n  },\n  segment: { boxShadow: 'none', borderWidth: '0' },\n  redText: { color: 'red' },\n};\n\nexport default styles;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Image, List, Menu } from 'semantic-ui-react';\nimport styles from '../context/constants';\nimport { PUBLIC_FOLDER } from '../context/consts';\nimport Footer from './Footer';\n\nexport default function NavBar() {\n  const imgURL = PUBLIC_FOLDER;\n  const changeTitle = () => {\n    switch (window.location.pathname) {\n      case '/thankyou':\n        return 'Thank you';\n      case '/summary':\n        return 'Summary';\n      default:\n        return 'Return to work';\n    }\n  };\n\n  return (\n    <Menu\n      color='blue'\n      inverted\n      fluid\n      widths={3}\n      fixed='top'\n      position='absolute'\n      borderless\n      style={{ boxShadow: 'none', borderWidth: '0' }}\n    >\n      <Menu.Item as={NavLink} exact to='/'>\n        <Image\n          size='small'\n          src={imgURL + 'rt-logo-white.png'}\n          alt='rt-logo-white'\n        />\n      </Menu.Item>\n      <Menu.Item style={styles.lightGreyFont}>\n        <span className='lightGreyFont'> {changeTitle()}</span>\n      </Menu.Item>\n      <Menu.Item></Menu.Item>\n      <Footer></Footer>\n    </Menu>\n  );\n}\n","import React from 'react';\n\n   \nconst CartContext = React.createContext ({\n    //value: isCheckbox ? event.target.checked : event.target.value,\n    personalInfo: \n        {  \n            fname: '',\n            lname: '',\n            email: '',\n            cell: '',\n            date: '',\n        },\n    products : [\n        { id: 1, name: 'Governance Committe', img: 'governance.png', selected: false,},\n        {   id:2, name: 'System of Record/Dashboard',  img:  'dashboard.png', selected: false,},\n        {   id:3, name: 'Workforce Scheduling',  img: 'scheduling.png', selected: false,},\n        {   id:4, name: 'Custom Playbook for COVID Testing Workflow',  img: 'playbook.png', selected: false,},\n        {   id:5, name: 'COVID Testing',  img: 'testing.png', selected: false,},\n        {   id:6, name: 'Diagnosis',  img: 'diagnosis.png', selected: false,},\n        {   id:7, name: 'Contact Tracing',  img: 'tracing.png', selected: false, },\n        {   id:8, name: 'Quarantine Management',  img: 'quarentine.png', selected: false,},\n\n        ],\n    currentCart: {},\n    prodError: null,\n        \n})\n\nexport default CartContext;","//import uuidv4 from 'uuid/v4'\n\n\nexport default function cartReducer(state, action) {\n  switch(action.type) {\n\n    /* case 'add':\n        console.log(action.payload.name)\n        console.log(action.payload)\n        const prdexists = state.products.filter(t => t.id === action.payload.id)\n        if (!prdexists)\n        {\n                const newprd = {\n                    id: action.payload.id,\n                    img: action.payload.img,\n                    name: action.payload.name,\n                    selected: 'true',\n                }\n                const newprdlist = [...state.products, newprd]\n\n                return {\n                    ... state,\n                    products: newprdlist\n                }\n        }\n        else{\n        console.log('found already')\n        \n        } */\n        \n      /*   console.log(action.payload.product.name)\n        console.log(action.payload)\n        const newprd = {\n            id: action.payload.product.id,\n            img: action.payload.product.img,\n            name: action.payload.product.name,\n        } */\n        \n\n        case 'handleToggle':\n            /* return {\n                ...state,\n                currentCart : action.payload\n            } */\n            const selectedChanged = state.products.map(t => t.id === action.payload.id \n                ?\n                {\n                    ...action.payload,\n                    selected: ! action.payload.selected}\n                    :\n                    t\n                )\n        return{\n            ...state,\n            products: selectedChanged\n        }\n\n      case 'infoChange':\n          return {\n              ...state,\n              personalInfo: action.payload,\n                \n          }  \n\n   /*      //return [...state, action.product];\n    case 'remove':\n        const prods = state.products.filter(t => t.id !== action.payload.id)\n        return {\n            ...state,\n            products: prods\n        } */\n      case 'prodError':\n          return {\n              ...state,\n              prodError: action.payload,\n                \n          }  \n       \n    default:\n      return state;\n  }\n}","import React, { useContext,  } from 'react'\nimport CartContext from '../context/cartContext'\nimport { Button,  Divider,  Grid,  Image,  Label, Message, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'moment';\nimport styles from '../context/constants'\nimport { ASSETS_FOLDER  } from '../context/consts';\nimport NavBar from '../nav/NavBar';\nimport Footer from '../nav/Footer';\n\n\n\nexport default function Summary() {\n   \n    const imgURL = ASSETS_FOLDER;\n    const { state, dispatch } = useContext(CartContext);   \n\n    function handleToggle(product) {\n        dispatch({ type: 'handleToggle', payload: product });\n    }\n\n   \n    return (\n        <>\n            <NavBar></NavBar>\n            <Segment style={styles.borderless} clearing >\n        \n                <Message info style={styles.borderless}>\n                    <Message.Header>Summary of your information</Message.Header>\n                </Message>\n                \n                <Message style={styles.borderless}>\n                    <h4 style={styles.lightGreyFont}>{'About you'}</h4>\n                    <Divider></Divider>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={6}>\n                                First name\n                        </Grid.Column>\n                            <Grid.Column width={10}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.fname}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={6}>\n                                Last name\n                        </Grid.Column>\n                            <Grid.Column width={10}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.lname}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={6}>\n                                Email\n                        </Grid.Column>\n                            <Grid.Column width={10}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.email}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={6}>\n                                Cell phone\n                        </Grid.Column>\n                            <Grid.Column width={12}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.cell}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={6}>\n                                Date\n                        </Grid.Column>\n                            <Grid.Column width={10}>\n                                <h5 style={styles.greyFont}> {state.personalInfo.date && Moment(state.personalInfo.date).format('MM-DD-YYYY')}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n         \n                </Message>\n                <Segment style={styles.borderless} clearing>\n                    <Button size='tiny' color='blue' as={Link} to='/thankyou' floated='right'\n                        disabled={state.products.filter(t => t.selected === true).length === 0}\n                    >\n                         Submit\n                    </Button>\n                    <Button basic size='tiny' as={Link} to='/rtwform' floated='right'>{'<< Back'}</Button>\n                </Segment>\n       \n                {                            \n                    state.products.filter(t => t.selected === true).length === 0 &&\n                    <h5  style={styles.redText}>{'Please select offering(s)'}</h5>\n                }\n                {                            \n                    state.products.filter(t => t.selected === true).length > 0 &&\n                    <h5  style={styles.greyFont}>{'Review your selections'} </h5>\n                }     \n                        \n                <Divider></Divider>\n                <Grid size='small'>\n                    {state.products.map((product) => (\n                        product.selected &&\n                        \n                            <Grid.Row key={product.id}>\n                                <Grid.Column width={4}>\n                                    <Image\n                                        responsive='true'\n                                        src={imgURL + product.img}\n                                        circular\n                                        alt='my image'\n                                        width='40'\n                                        height='40'\n                                    />\n                                </Grid.Column>\n                                <Grid.Column width={10}>\n                                    <h4 style={styles.greyFont}>\n                                        {product.name || ' '}\n                                    </h4>\n                                </Grid.Column>\n                                <Grid.Column width={2}>\n                                    <Button\n                                        onClick={() =>\n                                            handleToggle(product)\n                                        }\n                                        icon='remove'\n                                        color='red'\n                                        size='tiny'\n                                    />\n                                </Grid.Column>\n\n                            </Grid.Row>\n                        \n                    ))}\n                </Grid>\n             \n            </Segment>\n          <Footer></Footer>  \n        </>\n    \n    )\n}","import { useState, useEffect, useReducer, useContext, } from 'react';\nimport cartReducer from '../store/cartReducer';\nimport CartContext from '../context/cartContext';\n\n\n\nconst useForm = (callback, validate) => {\n    const [cart, setCart] = useReducer(cartReducer, []);\n    const { state, dispatch } = useContext(CartContext);\n\n    //const [values, setValues] = useState({});\n    const values = state.personalInfo;\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n        }\n        //console.log(errors)\n    }, [errors]);\n\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true);\n        return isSubmitting;\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        const infoChanged = {\n            ...state.personalInfo,\n            [event.target.name]: event.target.value,\n        };\n        dispatch({\n            type: 'infoChange',\n            payload: infoChanged,\n        });\n        \n    };\n\n\n    const handleClear = (event) => {\n        event.persist();\n        setErrors('');\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        handleClear,\n        values,\n        errors,\n    }\n};\n\nexport default useForm;\n","export default function validate(values) {\n  let errors = {};\n  if (!values.email) {\n    errors.email = 'email address is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'email address is invalid';\n  }\n  if (!values.fname) {\n    errors.fname = 'first name is required';\n  } else if (values.fname.length < 2) {\n    errors.fname = 'first name must be 2 or more characters';\n  }\n  if (!values.lname) {\n    errors.lname = 'last name is required';\n  } else if (values.lname.length < 2) {\n    errors.fname = 'last name must be 2 or more characters';\n  }\n  /* if (!values.cell) {\n    errors.cell = 'cell number is required';\n  } else */\n    if (values.cell & !/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(values.cell)) {\n    errors.cell = 'phone number is invalid';\n  }\n\n  if (!values.date) {\n    errors.date = 'return date is required';\n  }\n  \n  //^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$\n  return errors;\n};","import React, { useContext, useReducer, useState } from 'react';\nimport { Button, Image, } from 'semantic-ui-react';\nimport cartReducer from '../store/cartReducer';\nimport CartContext from '../context/cartContext';\nimport { ASSETS_FOLDER  } from '../context/consts';\n\n\n\nexport default function Item({\n  handleToggle,\n  product,\n  styles,\n  \n}) {\n  const [isSelected, setSelected] = useState(product.selected);\n  const [cart, setCart] = useReducer(cartReducer, []);\n  const { state, dispatch } = useContext(CartContext);\n\n  const imgFolder = ASSETS_FOLDER;\n\n  const handleToggleDELETE = (product) => {\n    dispatch({ type: 'handleToggle', payload: product });\n};\n\n  return (\n    <>\n      <div \n        style={{\n          backgroundColor: product.selected ? 'rgba(0, 0, 0, 0)' : 'rgba(0, 0, 0, 0)',\n          display: 'grid'\n        }}\n        onClick={() => handleToggle(product)}\n      >\n         <Image\n          responsive='true'\n          src={imgFolder + product.img}\n          circular\n          alt='my image'\n          width='100'\n          height='100'\n          \n          style={{\n            borderStyle: product.selected ? 'solid' : 'none',\n            borderColor: product.selected ? '#abb8c3' : 'teal',\n            opacity: product.selected ? '0.5' : '1',\n            \n          }}\n        ></Image> \n        {product.selected && <span style={styles.figcaption}>SELECTED</span>}\n        <p info='true' style={styles.buttonTextSelected } >\n          {product.name}\n        </p>\n       \n      </div>\n       \n    </>\n  );\n}\n","import React, { useContext, useReducer, useState } from 'react';\n\nimport CartContext from '../context/cartContext';\n\nimport {\n  Button,\n  Divider,\n  Form,\n  Grid,\n  Input,\n  Label,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\n\nimport useForm from '../formValidation/userForm';\nimport validate from '../formValidation/validate';\nimport Item from '../components/Item';\nimport { useHistory } from 'react-router-dom';\nimport styles from '../context/constants';\nimport NavBar from '../nav/NavBar';\nimport Footer from '../nav/Footer';\n\nexport default function RTWForm() {\n  //const [cart, setCart] = useReducer(cartReducer, []);\n  const { state, dispatch } = useContext(CartContext);\n\n  const formData = state.personalInfo;\n  //const { fname, lname, email, cell, date } = formData;\n  const [tncCheck, setTncCheck] = useState(false);\n\n  const onClear = () => {\n    //clear context\n    const infoChanged = {\n      ...state.personalInfo,\n      fname: '',\n      lname: '',\n      email: '',\n      cell: '',\n      date: '',\n    };\n    dispatch({\n      type: 'infoChange',\n      payload: infoChanged,\n    });\n  };\n\n  function handleCheck({ target }) {\n    setTncCheck(target.checked);\n    console.log(target.checked);\n  }\n\n  function handleToggle(product) {\n    dispatch({ type: 'handleToggle', payload: product });\n  }\n  const history = useHistory();\n\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    showSummary,\n    validate\n  );\n\n  const count = state.products.filter((t) => t.selected === true).length;\n\n  function showSummary() {\n    if (count > 0) {\n      //prevstate => ({ count: prevstate.count + 1})\n      const prodSelected = state.prodError;\n      dispatch({ type: 'prodError', payload: null });\n    } else {\n      dispatch({ type: 'prodError', payload: 'Select an offering' });\n    }\n\n    if (count) {\n      history.push('/summary');\n    }\n  }\n\n  return (\n    <>\n      <NavBar></NavBar>\n      <Form onSubmit={handleSubmit} noValidate>\n        <Message size='large' style={styles.segment}>\n          <h5 style={styles.greyFont}>A few details about you</h5>\n\n          <Grid relaxed='very' stackable>\n            <Grid.Row>\n              <Grid.Column width={4}></Grid.Column>\n              <Grid.Column width={10}>\n                <Form.Group widths='equal'>\n                  <div className='field'>\n                    <div className='control'>\n                      <Input\n                        placeholder='first name'\n                        className={`input ${errors.fname && 'is-danger'}`}\n                        name='fname'\n                        onChange={handleChange}\n                        value={values.fname || ''}\n                        required\n                      />\n                    </div>\n                    {errors.fname && (\n                      <p style={styles.redText}>{errors.fname}</p>\n                    )}\n                  </div>\n                  <div className='field'>\n                    <div className='control'>\n                      <Input\n                        placeholder='last name'\n                        className={`input ${errors.lname && 'is-danger'}`}\n                        name='lname'\n                        onChange={handleChange}\n                        value={values.lname || ''}\n                        required\n                      />\n                    </div>\n                    {errors.lname && (\n                      <p style={styles.redText}>{errors.lname}</p>\n                    )}\n                  </div>\n                </Form.Group>\n                <div className='field'>\n                  <div className='control'>\n                    <Input\n                      placeholder='jondoe@email.com'\n                      autoComplete='off'\n                      className={`input ${errors.email && 'is-danger'}`}\n                      type='email'\n                      name='email'\n                      onChange={handleChange}\n                      value={values.email || ''}\n                      required\n                    />\n                    {errors.email && (\n                      <p style={styles.redText}>{errors.email} </p>\n                    )}\n                  </div>\n                </div>\n                <div className='field'>\n                  <div className='control'>\n                    <Input\n                      placeholder='cell number'\n                      className={`input ${errors.cell && 'is-danger'}`}\n                      name='cell'\n                      onChange={handleChange}\n                      value={values.cell || ''}\n                    />\n                  </div>\n                  {errors.cell && <p style={styles.redText}>{errors.cell}</p>}\n                </div>\n                <div className='field'>\n                  <div className='control'>\n                    <Input\n                      label='Return date'\n                      placeholder='mm/dd/yyyy'\n                      type='date'\n                      className={`input ${errors.date && 'is-danger'}`}\n                      name='date'\n                      onChange={handleChange}\n                      value={values.date || ''}\n                      required\n                    />\n                  </div>\n                  {errors.date && <p style={styles.redText}>{errors.date}</p>}\n                </div>\n                {/* <Form.Checkbox\n                  inline\n                  label='I agree to the terms and conditions '\n                  onChange={handleCheck}\n                /> */}\n                <Button basic size='small' onClick={onClear}>\n                  Cancel\n                </Button>\n                <Button primary type='submit' size='small'>\n                  {'>> Next'}\n                </Button>\n\n                {state.prodError && (\n                  <p style={styles.redText}>{'Please select offering(s)'}</p>\n                )}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Message>\n      </Form>\n      <h4 style={styles.greyFont}>\n        Select all Offerings you would like in your solution\n      </h4>\n\n      <Segment style={styles.boderless}>\n        <Grid>\n          <Grid.Row align='center' columns={4}>\n            {state.products.map((product) => (\n              <Grid.Column\n                style={{\n                  borderWidth: 0,\n                  background: 'none',\n                  minWidth: 170,\n                  maxWidth: 250,\n                  align: 'center',\n                }}\n                key={product.id}\n              >\n                <Item\n                  handleToggle={handleToggle}\n                  key={product.id}\n                  product={product}\n                  styles={styles}\n                  align='center'\n                />\n              </Grid.Column>\n              /*  <Grid.Column\n                style={{\n                  borderWidth: 0,\n                  background: 'none',\n                  minWidth: 220,\n                  maxWidth: 250,\n                  minHeight: 250,\n                  align: 'center',\n                }}\n                key={product.id}\n              >\n                <Item\n                  handleToggle={handleToggle}\n                  key={product.id}\n                  product={product}\n                  styles={styles}\n                  align='center'\n                />\n              </Grid.Column> */\n            ))}\n          </Grid.Row>\n          <Divider></Divider>\n        </Grid>\n      </Segment>\n      <Footer></Footer>\n    </>\n  );\n}\n","import React, { useContext,  } from 'react'\nimport { Message } from 'semantic-ui-react'\nimport CartContext from '../context/cartContext'\nimport Footer from '../nav/Footer';\nimport NavBar from '../nav/NavBar';\n\n\nexport default function Thankyou() {\nconst { state, dispatch } = useContext(CartContext);   \n    return (\n        <>\n            <NavBar></NavBar>\n            <Message>\n                <Message.Header>Thank you!  <span style={{color:'grey'}}>\n                    {' ' + state.personalInfo.fname + ' ' + state.personalInfo.lname + ' '} </span> for submitting.</Message.Header>\n                \n            </Message>\n            <Message info>\n                <Message.Header>message ...</Message.Header>\n                <p>\n                    message....\n                    message....\n                    message....\n                 </p>\n            </Message>\n            <Footer></Footer>\n        </>\n    )\n}","import React, { useContext, useReducer } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport HomePage from './Home';\nimport NavBar from '../src/nav/NavBar';\nimport cartContext from './context/cartContext';\nimport cartReducer from './store/cartReducer';\nimport Summary from './components/Summary';\n//import IndexForm from './forms/IndexFormdelete';\nimport RTWForm from './forms/RTWForm';\nimport Thankyou from './components/Thankyou';\nimport Footer from './nav/Footer';\n\n\n\nfunction App() {\n   const initialState = useContext(cartContext);\n   const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  return (\n  <>\n  <cartContext.Provider value={{state, dispatch}} >\n            \n        <Route exact path={'/'} component={HomePage}></Route> \n      <Route\n          path={'/(.+)'}\n          render={() => (\n        \n            <Container className='main'>\n                         \n              {/* <NavBar></NavBar> */}\n              <Route exact path='/' component={HomePage} />\n              <Route exact path='/rtwform' component={RTWForm} />\n              <Route exact path='/summary' component={Summary} />\n              <Route exact path='/thankyou' component={Thankyou} />\n            \n              {/* <Footer></Footer> */}\n           \n              \n            </Container>\n\n\n          \n          )}\n      />\n      </cartContext.Provider>\n\n \n   </>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, HashRouter, Route } from 'react-router-dom';\nimport HomePage from './Home';\n\n\n\nconst rootElement = document.getElementById('root');\n\nfunction render() {\n  ReactDOM.render(\n    <HashRouter>\n      \n          <App />\n        \n     </HashRouter>\n     ,\n     rootElement\n  );\n}\n\nif (module.hot) {\n  module.hot.accept('./App.js', function () {\n    setTimeout(render);\n  });\n}\n\nrender();\n\nserviceWorker.unregister();"],"sourceRoot":""}