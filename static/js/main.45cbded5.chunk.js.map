{"version":3,"sources":["components/Welcome.js","context/consts.js","nav/Footer.jsx","context/constants.js","nav/NavBar.jsx","Home.jsx","context/cartContext.js","store/cartReducer.js","components/Summary.js","formValidation/userForm.js","formValidation/validate.js","components/Item.js","forms/RTWForm.jsx","components/Thankyou.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","history","Message","style","position","top","width","background","boxShadow","borderWidth","Header","Button","onClick","push","size","primary","color","Icon","name","Footer","Menu","fluid","widths","fixed","borderless","Item","Moment","Date","format","styles","lightGreyFont","greyFont","backgroudless","border","buttonText","fontSize","buttonTextSelected","figcaption","left","height","segment","redText","NavBar","inverted","as","NavLink","exact","to","Image","src","alt","className","window","location","pathname","changeTitle","HomePage","backgroundSize","responsive","disabled","basic","Container","CartContext","React","createContext","personalInfo","fname","lname","email","cell","date","products","id","img","selected","currentCart","prodError","cartReducer","state","action","type","selectedChanged","map","t","payload","Summary","useContext","dispatch","Segment","clearing","Divider","Grid","Row","Column","Link","floated","filter","length","product","key","circular","handleToggle","icon","useForm","callback","validate","useReducer","values","useState","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","handleChange","event","persist","infoChanged","target","value","handleSubmit","preventDefault","handleClear","test","backgroundColor","borderStyle","borderColor","opacity","info","RTWForm","useHistory","count","Form","onSubmit","noValidate","relaxed","stackable","Group","Input","placeholder","onChange","required","autoComplete","label","boderless","columns","align","minWidth","maxWidth","minHeight","Thankyou","App","initialState","cartContext","Provider","path","component","render","Boolean","hostname","match","rootElement","document","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45cbded5.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Icon, Message } from 'semantic-ui-react'\n\n\nexport default function Welcome({history})\n{\n    const msgstyle = {\n    position: 'absolute',\n    top: '20%',\n    width: '60%',\n    background: 'transparent',\n    boxShadow: 'none',\n    borderWidth: '0',\n  };\n\n    return (\n        <Message style={msgstyle}>\n          <Message.Header>Welcome message .....</Message.Header>\n          <p>\n            We updated our privacy policy here to better service our customers.\n            We recommend reviewing the changes.\n          </p>\n          <Button\n            onClick={() => history.push('/rtwform')}\n            size='large'\n            primary\n            color='blue'\n          >\n            return to work\n            <Icon name='right arrow' />\n          </Button>\n        </Message>\n    )\n\n}","//export const ASSETS_FOLDER = 'https://raw.githubusercontent.com/kc2040/rtw/main/public/assets/';\nexport const ASSETS_FOLDER = 'assets/';\n\n//export const PUBLIC_FOLDER = 'https://raw.githubusercontent.com/kc2040/rtw/main/public/';\nexport const PUBLIC_FOLDER = '';\n\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport Moment from 'moment';\n\nexport default function Footer() {\n  return (\n    <Menu\n      color='#dcdcdc'\n      fluid\n      widths={6}\n      fixed='bottom'\n      position='absolute'\n      borderless\n      style={{ boxShadow: 'none', borderWidth: '0' }}\n    >\n      <Menu.Item>{Moment(Date()).format('YYYY')} © Randstad</Menu.Item>\n      <Menu.Item>Terms</Menu.Item>\n      <Menu.Item>Privacy</Menu.Item>\n      <Menu.Item>Contact</Menu.Item>\n    </Menu>\n  );\n}\n","const styles = {\n    lightGreyFont: { color: '#C0C0C0' },\n    greyFont: { color: '#808080' },\n    borderless: { boxShadow: 'none', borderWidth: '0' },\n    backgroudless: { border: 'none', background: 'none', },\n        \n    buttonText: {\n    color: '#abb8c3',\n    fontSize: '1em',\n  },\n  buttonTextSelected: {\n    fontSize: '0.9em',\n    color: '#abb8c3',\n  },\n\n  figcaption: {\n    position: 'absolute',\n    top: 90,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    fontSize: '1.3em',\n  },\n  segment: { boxShadow: 'none', borderWidth: '0' },\n  redText: { color: 'red' },\n};\n\nexport default styles;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Image, List, Menu } from 'semantic-ui-react';\nimport styles from '../context/constants';\nimport { PUBLIC_FOLDER } from '../context/consts';\nimport Footer from './Footer';\n\nexport default function NavBar() {\n  const imgURL = PUBLIC_FOLDER;\n  const changeTitle = () => {\n    switch (window.location.pathname) {\n      case '/thankyou':\n        return 'Thank you';\n      case '/summary':\n        return 'Summary';\n      default:\n        return 'Return to work';\n    }\n  };\n\n  return (\n    <Menu\n      color='blue'\n      inverted\n      fluid\n      widths={3}\n      fixed='top'\n      position='absolute'\n      borderless\n      style={{ boxShadow: 'none', borderWidth: '0' }}\n    >\n      <Menu.Item as={NavLink} exact to='/'>\n        <Image\n          size='small'\n          src={imgURL + 'rt-logo-white.png'}\n          alt='rt-logo-white'\n        />\n      </Menu.Item>\n      <Menu.Item style={styles.lightGreyFont}>\n        <h5 className='lightGreyFont'> {changeTitle()}</h5>\n      </Menu.Item>\n      <Menu.Item></Menu.Item>\n      <Footer></Footer>\n    </Menu>\n  );\n}\n","import React from 'react';\nimport {\n  Button,\n  Container,\n  Icon,\n  Image,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport Welcome from './components/Welcome';\nimport { PUBLIC_FOLDER } from './context/consts';\nimport Footer from './nav/Footer';\nimport NavBar from './nav/NavBar';\n\nexport default function HomePage({ history }) {\n  const background = { backgroundSize: 'cover' };\n  const imgURL = PUBLIC_FOLDER;\n\n  return (\n    <div style={{ background: '#fff' }}>\n      <Image\n        style={background}\n        responsive='true'\n        src={imgURL + 'businessoffice.png'}\n      ></Image>\n\n      <Button size='small' disabled basic>\n        <Image\n          size='small'\n          src={imgURL + 'rt-logo-dark.png'}\n          alt='rt-logo-dark'\n          style={{\n            position: 'absolute',\n            top: '1%',\n            left: '1%',\n          }}\n        />\n      </Button>\n\n      <Container>\n        <Welcome history={history}></Welcome>\n      </Container>\n      <Footer></Footer>\n    </div>\n  );\n}\n","import React from 'react';\n\n   \nconst CartContext = React.createContext ({\n    //value: isCheckbox ? event.target.checked : event.target.value,\n    personalInfo: \n        {  \n            fname: '',\n            lname: '',\n            email: '',\n            cell: '',\n            date: '',\n        },\n    products : [\n        { id: 1, name: 'Governance Committe', img: 'governance.png', selected: false,},\n        {   id:2, name: 'System of Record/Dashboard',  img:  'dashboard.png', selected: false,},\n        {   id:3, name: 'Workforce Scheduling',  img: 'scheduling.png', selected: false,},\n        {   id:4, name: 'Custom Playbook for COVID Testing Workflow',  img: 'playbook.png', selected: false,},\n        {   id:5, name: 'COVID Testing',  img: 'testing.png', selected: false,},\n        {   id:6, name: 'Diagnosis',  img: 'diagnosis.png', selected: false,},\n        {   id:7, name: 'Contact Tracing',  img: 'tracing.png', selected: false, },\n        {   id:8, name: 'Quarantine Management',  img: 'quarentine.png', selected: false,},\n\n        ],\n    currentCart: {},\n    prodError: null,\n        \n})\n\nexport default CartContext;","//import uuidv4 from 'uuid/v4'\n\n\nexport default function cartReducer(state, action) {\n  switch(action.type) {\n\n    /* case 'add':\n        console.log(action.payload.name)\n        console.log(action.payload)\n        const prdexists = state.products.filter(t => t.id === action.payload.id)\n        if (!prdexists)\n        {\n                const newprd = {\n                    id: action.payload.id,\n                    img: action.payload.img,\n                    name: action.payload.name,\n                    selected: 'true',\n                }\n                const newprdlist = [...state.products, newprd]\n\n                return {\n                    ... state,\n                    products: newprdlist\n                }\n        }\n        else{\n        console.log('found already')\n        \n        } */\n        \n      /*   console.log(action.payload.product.name)\n        console.log(action.payload)\n        const newprd = {\n            id: action.payload.product.id,\n            img: action.payload.product.img,\n            name: action.payload.product.name,\n        } */\n        \n\n        case 'handleToggle':\n            /* return {\n                ...state,\n                currentCart : action.payload\n            } */\n            const selectedChanged = state.products.map(t => t.id === action.payload.id \n                ?\n                {\n                    ...action.payload,\n                    selected: ! action.payload.selected}\n                    :\n                    t\n                )\n        return{\n            ...state,\n            products: selectedChanged\n        }\n\n      case 'infoChange':\n          return {\n              ...state,\n              personalInfo: action.payload,\n                \n          }  \n\n   /*      //return [...state, action.product];\n    case 'remove':\n        const prods = state.products.filter(t => t.id !== action.payload.id)\n        return {\n            ...state,\n            products: prods\n        } */\n      case 'prodError':\n          return {\n              ...state,\n              prodError: action.payload,\n                \n          }  \n       \n    default:\n      return state;\n  }\n}","import React, { useContext,  } from 'react'\nimport CartContext from '../context/cartContext'\nimport { Button,  Divider,  Grid,  Image,  Label, Message, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'moment';\nimport styles from '../context/constants'\nimport { ASSETS_FOLDER  } from '../context/consts';\n\n\n\nexport default function Summary() {\n   \n    const imgURL = ASSETS_FOLDER;\n    const { state, dispatch } = useContext(CartContext);   \n\n    function handleToggle(product) {\n        dispatch({ type: 'handleToggle', payload: product });\n    }\n\n   \n    return (\n        <>\n            <Segment style={styles.borderless} clearing >\n        \n                <Message style={styles.borderless}>\n                    <h4 style={styles.lightGreyFont}>{'About you'}</h4>\n                    <Divider></Divider>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                First name\n                        </Grid.Column>\n                            <Grid.Column width={12}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.fname}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                Last name\n                        </Grid.Column>\n                            <Grid.Column width={12}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.lname}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                Email\n                        </Grid.Column>\n                            <Grid.Column width={12}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.email}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                Cell phone\n                        </Grid.Column>\n                            <Grid.Column width={12}>\n                                <h5 style={styles.greyFont}>{state.personalInfo.cell}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                Date\n                        </Grid.Column>\n                            <Grid.Column width={12}>\n                                <h5 style={styles.greyFont}> {state.personalInfo.date && Moment(state.personalInfo.date).format('MM-DD-YYYY')}</h5>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n         \n                </Message>\n                <Segment style={styles.borderless} clearing>\n                    <Button size='tiny' color='blue' as={Link} to='/thankyou' floated='right'\n                        disabled={state.products.filter(t => t.selected === true).length === 0}\n                    >\n                         Submit\n                    </Button>\n                    <Button basic size='tiny' as={Link} to='/rtwform' floated='right'>{'<< Back'}</Button>\n                </Segment>\n       \n                {                            \n                    state.products.filter(t => t.selected === true).length === 0 &&\n                    <h5  style={styles.redText}>{'Please select offering(s)'}</h5>\n                }\n                {                            \n                    state.products.filter(t => t.selected === true).length > 0 &&\n                    <h5  style={styles.greyFont}>{'Review your selections'} </h5>\n                }     \n                        \n                <Divider></Divider>\n                <Grid size='small'>\n                    {state.products.map((product) => (\n                        product.selected &&\n                        \n                            <Grid.Row key={product.id}>\n                                <Grid.Column width={4}>\n                                    <Image\n                                        responsive='true'\n                                        src={imgURL + product.img}\n                                        circular\n                                        alt='my image'\n                                        width='40'\n                                        height='40'\n                                    />\n                                </Grid.Column>\n                                <Grid.Column width={10}>\n                                    <h4 style={styles.greyFont}>\n                                        {product.name || ' '}\n                                    </h4>\n                                </Grid.Column>\n                                <Grid.Column width={2}>\n                                    <Button\n                                        onClick={() =>\n                                            handleToggle(product)\n                                        }\n                                        icon='remove'\n                                        color='red'\n                                        size='tiny'\n                                    />\n                                </Grid.Column>\n\n                            </Grid.Row>\n                        \n                    ))}\n                </Grid>\n             \n            </Segment>\n            \n        </>\n    \n    )\n}","import { useState, useEffect, useReducer, useContext, } from 'react';\nimport cartReducer from '../store/cartReducer';\nimport CartContext from '../context/cartContext';\n\n\n\nconst useForm = (callback, validate) => {\n    const [cart, setCart] = useReducer(cartReducer, []);\n    const { state, dispatch } = useContext(CartContext);\n\n    //const [values, setValues] = useState({});\n    const values = state.personalInfo;\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n        }\n        //console.log(errors)\n    }, [errors]);\n\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true);\n        return isSubmitting;\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        const infoChanged = {\n            ...state.personalInfo,\n            [event.target.name]: event.target.value,\n        };\n        dispatch({\n            type: 'infoChange',\n            payload: infoChanged,\n        });\n        \n    };\n\n\n    const handleClear = (event) => {\n        event.persist();\n        setErrors('');\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        handleClear,\n        values,\n        errors,\n    }\n};\n\nexport default useForm;\n","export default function validate(values) {\n  let errors = {};\n  if (!values.email) {\n    errors.email = 'email address is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'email address is invalid';\n  }\n  if (!values.fname) {\n    errors.fname = 'first name is required';\n  } else if (values.fname.length < 2) {\n    errors.fname = 'first name must be 2 or more characters';\n  }\n  if (!values.lname) {\n    errors.lname = 'last name is required';\n  } else if (values.lname.length < 2) {\n    errors.fname = 'last name must be 2 or more characters';\n  }\n  /* if (!values.cell) {\n    errors.cell = 'cell number is required';\n  } else */\n    if (values.cell & !/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(values.cell)) {\n    errors.cell = 'phone number is invalid';\n  }\n\n  if (!values.date) {\n    errors.date = 'return date is required';\n  }\n  \n  //^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$\n  return errors;\n};","import React, { useContext, useReducer, useState } from 'react';\nimport { Button, Image, } from 'semantic-ui-react';\nimport cartReducer from '../store/cartReducer';\nimport CartContext from '../context/cartContext';\nimport { ASSETS_FOLDER  } from '../context/consts';\n\n\n\nexport default function Item({\n  handleToggle,\n  product,\n  styles,\n  \n}) {\n  const [isSelected, setSelected] = useState(product.selected);\n  const [cart, setCart] = useReducer(cartReducer, []);\n  const { state, dispatch } = useContext(CartContext);\n\n  const imgFolder = ASSETS_FOLDER;\n\n  const handleToggleDELETE = (product) => {\n    dispatch({ type: 'handleToggle', payload: product });\n};\n\n  return (\n    <>\n      <Button\n        style={{\n          backgroundColor: product.selected ? 'rgba(0, 0, 0, 0)' : 'rgba(0, 0, 0, 0)',\n          //opacity: isSelected ? '0.5' : '1',\n        }}\n        onClick={() => handleToggle(product)}\n      >\n        <Image\n          responsive='true'\n          src={imgFolder + product.img}\n          circular\n          alt='my image'\n          width='155'\n          height='155'\n          style={{\n            borderStyle: product.selected ? 'solid' : 'none',\n            borderColor: product.selected ? '#abb8c3' : 'teal',\n            opacity: product.selected ? '0.5' : '1',\n          }}\n        ></Image>\n        {product.selected && <span style={styles.figcaption}>SELECTED</span>}\n        <p info='true' style={styles.buttonTextSelected}>\n          {product.name}\n        </p>\n      </Button>\n    </>\n  );\n}\n","import React, { useContext, useReducer, useState } from 'react';\n\nimport CartContext from '../context/cartContext';\n\nimport {\n  Button,\n  Divider,\n  Form,\n  Grid,\n  Input,\n  Label,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\n\nimport useForm from '../formValidation/userForm';\nimport validate from '../formValidation/validate';\nimport Item from '../components/Item';\nimport { useHistory } from 'react-router-dom';\nimport styles from '../context/constants';\n\nexport default function RTWForm() {\n  //const [cart, setCart] = useReducer(cartReducer, []);\n  const { state, dispatch } = useContext(CartContext);\n\n  const formData = state.personalInfo;\n  //const { fname, lname, email, cell, date } = formData;\n  const [tncCheck, setTncCheck] = useState(false);\n\n  const onClear = () => {\n    //clear context\n    const infoChanged = {\n      ...state.personalInfo,\n      fname: '',\n      lname: '',\n      email: '',\n      cell: '',\n      date: '',\n    };\n    dispatch({\n      type: 'infoChange',\n      payload: infoChanged,\n    });\n  };\n\n  function handleCheck({ target }) {\n    setTncCheck(target.checked);\n    console.log(target.checked);\n  }\n\n  function handleToggle(product) {\n    dispatch({ type: 'handleToggle', payload: product });\n  }\n  const history = useHistory();\n\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    showSummary,\n    validate\n  );\n\n  const count = state.products.filter((t) => t.selected === true).length;\n\n  function showSummary() {\n    if (count > 0) {\n      //prevstate => ({ count: prevstate.count + 1})\n      const prodSelected = state.prodError;\n      dispatch({ type: 'prodError', payload: null });\n    } else {\n      dispatch({ type: 'prodError', payload: 'Select an offering' });\n    }\n\n    if (count) {\n      history.push('/summary');\n    }\n  }\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} noValidate>\n        <Message size='large' style={styles.segment}>\n          <h5 style={styles.greyFont}>Fill out the form below !</h5>\n\n          <Grid relaxed='very' stackable>\n            <Grid.Row>\n              <Grid.Column width={4}></Grid.Column>\n              <Grid.Column width={10}>\n                <Form.Group widths='equal'>\n                  <div className='field'>\n                    <div className='control'>\n                      <Input\n                        placeholder='first name'\n                        className={`input ${errors.fname && 'is-danger'}`}\n                        name='fname'\n                        onChange={handleChange}\n                        value={values.fname || ''}\n                        required\n                      />\n                    </div>\n                    {errors.fname && (\n                      <p style={styles.redText}>{errors.fname}</p>\n                    )}\n                  </div>\n                  <div className='field'>\n                    <div className='control'>\n                      <Input\n                        placeholder='last name'\n                        className={`input ${errors.lname && 'is-danger'}`}\n                        name='lname'\n                        onChange={handleChange}\n                        value={values.lname || ''}\n                        required\n                      />\n                    </div>\n                    {errors.lname && (\n                      <p style={styles.redText}>{errors.lname}</p>\n                    )}\n                  </div>\n                </Form.Group>\n                <div className='field'>\n                  <div className='control'>\n                    <Input\n                      placeholder='jondoe@email.com'\n                      autoComplete='off'\n                      className={`input ${errors.email && 'is-danger'}`}\n                      type='email'\n                      name='email'\n                      onChange={handleChange}\n                      value={values.email || ''}\n                      required\n                    />\n                    {errors.email && (\n                      <p style={styles.redText}>{errors.email} a@yahoo.com</p>\n                    )}\n                  </div>\n                </div>\n                <div className='field'>\n                  <div className='control'>\n                    <Input\n                      placeholder='cell number'\n                      className={`input ${errors.cell && 'is-danger'}`}\n                      name='cell'\n                      onChange={handleChange}\n                      value={values.cell || ''}\n                    />\n                  </div>\n                  {errors.cell && <p style={styles.redText}>{errors.cell}</p>}\n                </div>\n                <div className='field'>\n                  <div className='control'>\n                    <Input\n                      label='Return date'\n                      placeholder='mm/dd/yyyy'\n                      type='date'\n                      className={`input ${errors.date && 'is-danger'}`}\n                      name='date'\n                      onChange={handleChange}\n                      value={values.date || ''}\n                      required\n                    />\n                  </div>\n                  {errors.date && <p style={styles.redText}>{errors.date}</p>}\n                </div>\n                {/* <Form.Checkbox\n                  inline\n                  label='I agree to the terms and conditions '\n                  onChange={handleCheck}\n                /> */}\n                <Button basic size='small' onClick={onClear}>\n                  Cancel\n                </Button>\n                <Button primary type='submit' size='small'>\n                  {'>> Next'}\n                </Button>\n\n                {state.prodError && (\n                  <p style={styles.redText}>{'Please select offering(s)'}</p>\n                )}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Message>\n      </Form>\n      <h4 style={styles.greyFont}>\n        Select all Offerings you would like in your solution\n      </h4>\n\n      <Segment style={styles.boderless}>\n        <Grid columns={4}>\n          <Grid.Row align='center'>\n            {state.products.map((product) => (\n              <Grid.Column\n                style={{\n                  borderWidth: 0,\n                  background: 'none',\n                  minWidth: 220,\n                  maxWidth: 250,\n                  minHeight: 250,\n                  align: 'center',\n                }}\n                key={product.id}\n              >\n                <Item\n                  handleToggle={handleToggle}\n                  key={product.id}\n                  product={product}\n                  styles={styles}\n                  align='center'\n                />\n              </Grid.Column>\n            ))}\n          </Grid.Row>\n          <Divider></Divider>\n        </Grid>\n      </Segment>\n    </>\n  );\n}\n","import React, { useContext,  } from 'react'\nimport { Message } from 'semantic-ui-react'\nimport CartContext from '../context/cartContext'\n\n\nexport default function Thankyou() {\nconst { state, dispatch } = useContext(CartContext);   \n    return (\n        <>\n            <Message>\n                <Message.Header>Thank you!  <span style={{color:'grey'}}>\n                    {' ' + state.personalInfo.fname + ' ' + state.personalInfo.lname + ' '} </span> for submitting.</Message.Header>\n                \n            </Message>\n            <Message info>\n                <Message.Header>message ...</Message.Header>\n                <p>\n                    message....\n                    message....\n                    message....\n                 </p>\n            </Message>\n        </>\n    )\n}","import React, { useContext, useReducer } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport HomePage from './Home';\nimport NavBar from '../src/nav/NavBar';\nimport cartContext from './context/cartContext';\nimport cartReducer from './store/cartReducer';\nimport Summary from './components/Summary';\n//import IndexForm from './forms/IndexFormdelete';\nimport RTWForm from './forms/RTWForm';\nimport Thankyou from './components/Thankyou';\nimport Footer from './nav/Footer';\n\n\n\nfunction App() {\n   const initialState = useContext(cartContext);\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  return (\n  <>\n  <cartContext.Provider value={{state, dispatch}} >\n            \n      <Route exact path='/' component={HomePage} />\n      <Route\n          path={'/(.+)'}\n          render={() => (\n        \n            <Container className='main'>\n                         \n              <NavBar></NavBar>\n              {/* <Route exact path='/index' component={IndexForm} /> */}\n              <Route exact path='/rtwform' component={RTWForm} />\n              <Route exact path='/summary' component={Summary} />\n              <Route exact path='/thankyou' component={Thankyou} />\n            \n              <Footer></Footer>\n           \n              \n            </Container>\n\n\n          \n          )}\n      />\n      </cartContext.Provider>\n\n \n   </>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useContext, useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\n\nconst rootElement = document.getElementById('root');\n\nfunction render() {\n  ReactDOM.render(\n      <BrowserRouter>\n          <App />\n        \n     </BrowserRouter>\n     ,\n     rootElement\n  );\n}\n\nif (module.hot) {\n  module.hot.accept('./App.js', function () {\n    setTimeout(render);\n  });\n}\n\nrender();\n\nserviceWorker.unregister();"],"sourceRoot":""}